Development Phase - We create a development provisioning profile so that our team can run app on iOS devices specifically 
                    configured for development. It is important to test our app on actual devices, not just in the iOS Simulator. 


Development and Testing :
1. Create your Team (Managing Team Members)
2. Development Provisioning Profile (Device IDs, iOS Development Certificates, App ID)

Distribution :
1. Distribution Provisioning Profile (iOS Distribution Certificates, App ID)
2. Distribute (App Store, Adhoc Distribution, In-house Distribution)

Development - This certificate is used to cryptographically sign an app. An app must be signed before it can run on an iOS device. 
              A team member can have only one active development certificate, but one certificate can be used in multiple apps.

              The development certificate a developer requests includes a copy of their public key. 
              The private key is saved in the developer’s keychain when they make the certificate request. 
              The public/private key pair and the development certificate are used to sign an app. 

              A development certificate is restricted to development only and is valid for a limited time. 

              The Apple Worldwide Developer Relations Certification Authority can also revoke a certificate before it expires.

* The private key is saved (in the keychain) on the Mac that was used to request the certificate. 
Team members who want to enable code signing on a different Mac must transfer their developer profile as described in 
Safeguarding and Transferring Your Signing and Provisioning Assets.

APP ID :
An app ID has two parts: the team ID followed by the bundle ID search string. 

The team ID is a 10-character string generated by Apple. Each development team is assigned a unique team ID used to 
identify all your apps. The team ID allows you to share keychain data between apps. Apps with the same team ID can share data, 
such as usernames and passwords. A bundle ID search string is traditionally a reverse-domain-name style string. 
It’s the string you use in Xcode as the bundle ID.

Example : A1B2C3D4E5.com.saumya.demo ( A1B2C3D4E5 - TeamID , com.saumya.demo - BundleID)

Types of APP ID's :
1. wildcard app IDs - Allows to use a single app ID to build and install multiple apps. However, wildcard app IDs can’t 
                      be used with APNS, In-App Purchase, iCloud, or Game Center. Use a wildcard app ID when getting started 
                      with development because it can simplify provisioning devices.
                      
                      A wildcard app ID uses the asterisk character (*) in the bundle ID search string. 
                      The asterisk must be the last character in the bundle ID search string, such as com.domain.* or just *. 
                      In the bundle identifier field in Xcode, developers can replace the asterisk with any string, 
                      as long as it matches the wildcard pattern. For example, the app ID a1b2c3d4e5.com.domainname.
                      * matches the bundle ID a1b2c3d4e5.com.domainname.myApp4.
                      
                      Example1 : A1B2C3D4E5.*
                      Example2 : A1B2C3D4E5.com.saumya.*
                      
2. explicit app IDs - Use an explicit app ID if we want to use APNS, In-App Purchase, iCloud, and Game Center features. 
                      Because explicit app IDs match only one app, a separate ID and accompanying provisioning profile is 
                      required for each app. 
                      An explicit app ID uses a reverse-domain-name string that exactly matches the bundle ID in Xcode.
                      
Things that are buncled in Development Provisioning Profile : 
1. An app ID that identifies the set of apps it authorizes to run
2. A list of devices your team wants to use for testing, 
3. A list of developers permitted to sign the app

A provisioning profile is valid for one year. A device can be added to multiple provisioning profiles.















